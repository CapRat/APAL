#docker-build-win64:
#  image: docker:latest
#  stage: build
#  services:
#    - docker:dind
#  before_script:    
#    - docker run --rm dockcross/windows-static-x86 > ./dockcross
#    - chmod +x ./dockcross
#    - cat ./dockcross
#  script:
#    - ./dockcross cmake -Bbuild -H. -GNinja
#    - ./dockcross ninja -Cbuild
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  
docker-build-linux-x64:
  image: dockcross/linux-x64 
  stage: build
  script:
    - git clone https://github.com/CapRat/plugin-torture.git && mkdir plugin-torture/build && cd plugin-torture/build && cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release .. && cmake --build . --target install && cd ../..
    - mkdir build
    - cd build
    - cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release ..
    - cmake --build .  
  artifacts:
    paths:
      - build/
    expire_in: 30 mins
    
docker-test-linux-x64 :
  image: dockcross/linux-x64 
  stage: test
  script:
    - cd build
    - ctest  
  dependencies: 
    - docker-build-linux-x64

docker-deploy-linux-x64 :
  image: dockcross/linux-x64
  script:
    - cd build
    - \"Y\" | apt install rpm
    - cpack -G DEP .
    - cpack -G RPM .
  dependencies:
    - docker-build-linux-x64
  artifacts:
    paths:
      - build
    expire_in: 30 mins
    
docker-build-win64:
  image: dockcross/windows-static-x64
  stage: build
  script:
    - git clone https://github.com/CapRat/plugin-torture.git && mkdir plugin-torture/build && cd plugin-torture/build && cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release .. && cmake --build . --target install && cd ../..
    - mkdir build
    - cd build
    - cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release ..
    - cmake --build .



#docker-build:
#  # Official docker image.
#  image: docker:latest
#  stage: build
#  services:
#    - docker:dind
#  before_script:
#    - docker run --rm dockcross/windows-static-x86 > ./dockcross
#  script:
#    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
#    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
#  except:
#    - master
  
  
# This file is a template, and might need editing before it works on your project.
#docker-publish-win64:
#  # Official docker image.
#  image: docker:latest
#  stage: build
#  services:
#    - docker:dind
#  before_script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#  script:
#    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
#    - docker push "$CI_REGISTRY_IMAGE"
#  only:
#    - master
