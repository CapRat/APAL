variables:
  GIT_SUBMODULE_STRATEGY: recursive
  
debian_buster_x64_build:
  image: debian:buster-slim 
  stage: build
  before_script:
    - apt update
    - DEBIAN_FRONTEND=noninteractive apt --yes install cmake git ninja-build build-essential
   # - DEBIAN_FRONTEND=noninteractive apt --yes --force-yes install libx11-dev libfreetype6-dev 	pkg-config libxcb-util0-dev libstdc++6 libx11-xcb-dev libxcb-util0-dev libxcb-cursor-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev libfontconfig1-dev libcairo2-dev libgtkmm-3.0-dev libsqlite3-dev libxcb-keysyms1-dev
  script:
    - mkdir -p build/Release
    - mkdir -p build/Debug
    - mkdir -p build/deps
    - cmake -DINSTALL_PREFIX=$(pwd)/build/deps -DBUILD_DIR=build/deps -P scripts/install.cmake 
    - cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release  -DCMAKE_PREFIX_PATH=$(pwd)/build/deps -S . -B build/Release
    - cmake --build build/Release/ 
    - cmake -E env CXXFLAGS="-g -O0 -Wall -Wextra -Wpedantic -Wshadow  -W --coverage" C_FLAGS="-g -O0 -Wall -W --coverage" LDFLAGS="--coverage -lgcov" cmake -G "Ninja" -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug  -DCMAKE_PREFIX_PATH=$(pwd)/build/deps -S . -B $(pwd)/build/Debug
    - cmake --build $(pwd)/build/Debug
  artifacts:    
    paths:
      - build/
    expire_in: 30 mins

debian_test:
  image: debian:buster-slim 
  stage: test
  before_script:
    - apt update
    - DEBIAN_FRONTEND=noninteractive apt --yes install cmake gcovr cppcheck
  script:
    - cd build/Debug
    - ctest -E pluginval
    #- gcovr --fail-under-line 80 -s -e '.*/deps/.*$' -e '.*(CMake|(T|t)tl|string_view).*$'  --exclude-directories "test/|examples/|deps/"   -r $(pwd)/../..  $(pwd)
    - cppcheck  --enable=warning,style,performance,portability --error-exitcode=1 -q --std=c++14 --language=c++ --suppress=*:*deps/* --project=compile_commands.json
    - gcovr --fail-under-line 80 -s -e '.*/deps/.*$' -e '.*(CMake|(T|t)tl|string_view).*$'  --exclude-directories "test/|examples/|deps/"   -r $(readlink -f $(pwd)/../..)  $(pwd)
#docker-test-linux-x64 :
#  image: dockcross/linux-x64    
#  stage: test
#  before_script:
#    #freeglut3-dev g++ libasound2-dev libcurl4-openssl-dev libfreetype6-dev libjack-jackd2-dev libx11-dev libxcomposite-dev libxcursor-dev libxinerama-dev libxrandr-dev mesa-common-dev ladspa-sdk webkit2gtk-4.0 libgtk-3-dev xvfb
#    - DEBIAN_FRONTEND=noninteractive apt --yes --force-yes install libasound2 libfreetype6 libx11-6 libxcomposite1 libxcursor1 libxinerama1 libxrandr2 libgtk-3-0 freeglut3 libjack-jackd2-0 xserver-xorg-video-dummy curl
#    - curl -o ./xorg.conf https://xpra.org/xorg.conf
#    - Xorg -noreset +extension GLX +extension RANDR +extension RENDER -logfile ./10.log -config ./xorg.conf :99 &
#    - export DISPLAY=:99
#    - sleep 3 # give xvfb some time to start
#  script:
#    - cd build
#    - ctest --verbose
#  dependencies: 
#    - docker-build-linux-x64

docker-deploy-linux-x64 :
  image: debian:buster-slim
  stage: deploy
  before_script:
    - apt update
    - DEBIAN_FRONTEND=noninteractive apt --yes install cmake rpm
  script:
    - cd build/Release
    - cpack -G DEB .
    #- cpack -G RPM .
    - cpack -G ZIP .
  dependencies:
    - debian_buster_x64_build
  artifacts:
    paths:
      - build
    expire_in: 30 mins
    
#docker-build-win64:
#  image: dockcross/windows-static-x64
#  stage: build
#  script:
#    # - git clone https://github.com/CapRat/plugin-torture.git && mkdir plugin-torture/build && cd plugin-torture/build && cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release .. && cmake --build . --target install && cd ../..
#    - cmake -P scripts/install.cmake  
#    - mkdir build
#    - cd build
#    - cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release ..
#    - cmake --build .


#docker-deploy-win64 :
#  image: dockcross/windows-static-x64
#  stage: deploy
#  script:
#    - cd build
#    - echo Y | apt install nsis
#    - cpack -G ZIP .
#    - cpack -G NSIS .
#  dependencies:
#    - docker-build-win64
#  artifacts:
#    paths:
#      - build
#    expire_in: 30 mins
